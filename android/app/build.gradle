plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.facebook.react'
    // id 'com.google.gms.google-services'
}


import com.android.build.OutputFile


react {
    autolinkLibrariesWithApp()
}

android {
    namespace "com.ming.app"

    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.ming.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 58
        versionName "7.0"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('nobland.keystore')
            storePassword 'nobland'
            keyAlias 'nobland'
            keyPassword 'nobland'
        }
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_FLIPPER_ENABLED", "false"
         }
    }

    // splits {
    //     abi {
    //         reset()
    //         enable true
    //         universalApk false
    //         include "arm64-v8a", "armeabi-v7a"
    //     }
    // }
    // applicationVariants.all { variant ->
    //     variant.outputs.each { output ->
    //         def versionCodes = ["armeabi-v7a": 1, "arm64-v8a": 2]
    //         def abi = output.getFilter(OutputFile.ABI)
    //         if (abi != null) {
    //             output.versionCodeOverride =
    //                     defaultConfig.versionCode * 1000 + versionCodes.get(abi)
    //         }
    //     }
    // }
}




dependencies {
    implementation("com.facebook.react:react-android")
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")
    implementation("androidx.multidex:multidex:2.0.1")

    debugImplementation "com.facebook.flipper:flipper:${FLIPPER_VERSION}"
    debugImplementation "com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}"
    debugImplementation 'com.facebook.soloader:soloader:0.11.0'

    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation("org.webkit:android-jsc:+")
    }

    implementation(project(":nextup_react-native-zebra-scanner"))
}

project.ext.react = [
    enableHermes: true,
    jsEngine: "hermes"
]
